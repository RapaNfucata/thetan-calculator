{"ast":null,"code":"var _jsxFileName = \"/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Guadagni(props) {\n  _s();\n\n  //console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n  const [colore1, setColore1] = useState();\n  const [colore2, setColore2] = useState();\n  const [colore3, setColore3] = useState();\n  const [colore4, setColore4] = useState();\n  const activeColor = \"#2290FF\";\n  const standardColor = \"#fbba16\";\n\n  function roundNumber(num) {\n    const rndnum = Math.round((num + Number.EPSILON) * 100) / 100;\n    return rndnum;\n  }\n\n  const [heroInfo, setHeroInfo] = useState([]);\n  useEffect(() => {\n    percentageVar();\n  }, []);\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        setColore1(activeColor);\n        setColore2(standardColor);\n        setColore3(standardColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n\n      case 50:\n        percentage = 0.5;\n        setColore1(standardColor);\n        setColore2(activeColor);\n        setColore3(standardColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n\n      case 75:\n        percentage = 0.75;\n        setColore1(standardColor);\n        setColore2(standardColor);\n        setColore3(activeColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n\n      default:\n        percentage = 1;\n        setColore1(standardColor);\n        setColore2(standardColor);\n        setColore3(standardColor);\n        setColore4(activeColor);\n        setHero();\n    }\n  }\n\n  function setHero() {\n    let battaglieRimanenti = 0;\n    let prezzoHero = 0;\n\n    if (hero.sale) {\n      // se il personaggio è in vendita\n      if (hero.rentInfo) {\n        // se il personaggio è in affitto\n        prezzoHero = hero.rentInfo.cost.value / 100000000;\n        battaglieRimanenti = hero.rentInfo.rentBattles;\n      } else {\n        if (hero.lastPrice) {\n          // se il personaggio è stato aquistato\n          prezzoHero = hero.lastPrice.value / 100000000;\n          battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n          console.log(\"COMPRATO\");\n        } else {\n          prezzoHero = hero.sale.price.value / 100000000;\n          battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n        }\n      }\n    } else {\n      if (hero.lastPrice) {\n        // se il personaggio è stato aquistato\n        prezzoHero = hero.lastPrice.value / 100000000;\n        battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n      } else {\n        // se l'hai trovato in una box\n\n        /*         fetch(\"https://data.thetanarena.com/thetan/v1/thetanbox/dashboard\")\n                  .then((response) => response.json())\n                  .then((data) => console.log(data.data)); */\n        switch (hero.heroInfo.rarity) {\n          case 0:\n            prezzoHero = 1000;\n            break;\n\n          case 1:\n            prezzoHero = 2200;\n            break;\n\n          default:\n            prezzoHero = 0;\n        }\n\n        battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n      }\n    }\n\n    const battaglieRimanentiCalcolo = battaglieRimanenti * percentage;\n    const battagliePerse = battaglieRimanenti - battaglieRimanentiCalcolo;\n    console.log(battagliePerse);\n    const guadagnoPotenziale = roundNumber((hero.thcBonus + 6) * battaglieRimanentiCalcolo + battagliePerse);\n    const profittoPotenziale = roundNumber((guadagnoPotenziale - prezzoHero) * percentage);\n    const daily = roundNumber((hero.thcBonus + 6) * (hero.dailyTHCBattleConfig * percentage));\n    const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n    const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n    const dailyUSD = (daily * props.prezzoTHC).toFixed(2);\n    setHeroInfo([{\n      value: daily,\n      name: \"THC al giorno\",\n      usd: dailyUSD\n    }, {\n      value: guadagnoPotenziale,\n      name: \"Guadagno\",\n      usd: guadagnoUSD\n    }, {\n      value: profittoPotenziale,\n      name: \"Profitto\",\n      usd: profittoUSD\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainLayout flexSpace marginTop10 maxWidth350 column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Percentuale Vittorie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        className: \"flexSpace\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore1\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(25),\n          children: \"25%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore2\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(50),\n          children: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore3\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(75),\n          children: \"75%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore4\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(),\n          children: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), heroInfo ? heroInfo.map((data, index) => {\n      //console.log(data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainLayout flexSpace marginTop10 maxWidth350\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guadagnoLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"profittoPotenziale\",\n              children: [data.value, \" THC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"usd\",\n              id: \"profittoPotenzialeUSD\",\n              children: [data.usd, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + props.coin + \")\"\n            },\n            className: \"thc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"NIENTE\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guadagni, \"eDHw1qrksmK5XDXHQ2/SdAHV42E=\");\n\n_c = Guadagni;\nexport default Guadagni;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guadagni\");","map":{"version":3,"sources":["/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js"],"names":["useEffect","useState","Guadagni","props","hero","dataHero","percentage","colore1","setColore1","colore2","setColore2","colore3","setColore3","colore4","setColore4","activeColor","standardColor","roundNumber","num","rndnum","Math","round","Number","EPSILON","heroInfo","setHeroInfo","percentageVar","perc","setHero","battaglieRimanenti","prezzoHero","sale","rentInfo","cost","value","rentBattles","lastPrice","heroRanking","totalBattleCapTHC","battleCapTHC","console","log","price","rarity","battaglieRimanentiCalcolo","battagliePerse","guadagnoPotenziale","thcBonus","profittoPotenziale","daily","dailyTHCBattleConfig","guadagnoUSD","prezzoTHC","toFixed","profittoUSD","dailyUSD","name","usd","display","backgroundColor","map","data","index","backgroundImage","coin"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Guadagni(props) {\n  //console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n\n  const [colore1, setColore1] = useState();\n  const [colore2, setColore2] = useState();\n  const [colore3, setColore3] = useState();\n  const [colore4, setColore4] = useState();\n  const activeColor = \"#2290FF\";\n  const standardColor = \"#fbba16\";\n\n  function roundNumber(num) {\n    const rndnum = Math.round((num + Number.EPSILON) * 100) / 100;\n    return rndnum;\n  }\n\n  const [heroInfo, setHeroInfo] = useState([]);\n\n  useEffect(() => {\n    percentageVar();\n  }, []);\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        setColore1(activeColor);\n        setColore2(standardColor);\n        setColore3(standardColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n      case 50:\n        percentage = 0.5;\n        setColore1(standardColor);\n        setColore2(activeColor);\n        setColore3(standardColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n      case 75:\n        percentage = 0.75;\n        setColore1(standardColor);\n        setColore2(standardColor);\n        setColore3(activeColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n      default:\n        percentage = 1;\n        setColore1(standardColor);\n        setColore2(standardColor);\n        setColore3(standardColor);\n        setColore4(activeColor);\n        setHero();\n    }\n  }\n\n  function setHero() {\n    let battaglieRimanenti = 0;\n    let prezzoHero = 0;\n\n    if (hero.sale) {\n      // se il personaggio è in vendita\n      if (hero.rentInfo) {\n        // se il personaggio è in affitto\n        prezzoHero = hero.rentInfo.cost.value / 100000000;\n        battaglieRimanenti = hero.rentInfo.rentBattles;\n      } else {\n        if(hero.lastPrice) {\n          // se il personaggio è stato aquistato\n          prezzoHero = hero.lastPrice.value / 100000000;\n          battaglieRimanenti =\n            hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n            console.log(\"COMPRATO\")\n        } else {\n          prezzoHero = hero.sale.price.value / 100000000;\n          battaglieRimanenti =\n            hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n        }\n      }\n    } else {\n      if (hero.lastPrice) {\n        // se il personaggio è stato aquistato\n        prezzoHero = hero.lastPrice.value / 100000000;\n        battaglieRimanenti =\n          hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n      } else {\n        // se l'hai trovato in una box\n/*         fetch(\"https://data.thetanarena.com/thetan/v1/thetanbox/dashboard\")\n          .then((response) => response.json())\n          .then((data) => console.log(data.data)); */\n        switch (hero.heroInfo.rarity) {\n          case 0:\n            prezzoHero = 1000;\n            break;\n          case 1:\n            prezzoHero = 2200;\n            break;\n          default:\n            prezzoHero = 0;\n        }\n        battaglieRimanenti =\n          hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n      }\n    }\n\n    const battaglieRimanentiCalcolo = battaglieRimanenti * percentage;\n    const battagliePerse = battaglieRimanenti - battaglieRimanentiCalcolo;\n\n    console.log(battagliePerse);\n    const guadagnoPotenziale = roundNumber(\n      (hero.thcBonus + 6) * battaglieRimanentiCalcolo + battagliePerse\n    );\n    const profittoPotenziale = roundNumber(\n      (guadagnoPotenziale - prezzoHero) * percentage\n    );\n    const daily = roundNumber(\n      (hero.thcBonus + 6) * (hero.dailyTHCBattleConfig * percentage)\n    );\n\n    const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n    const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n    const dailyUSD = (daily * props.prezzoTHC).toFixed(2);\n\n    setHeroInfo([\n      {\n        value: daily,\n        name: \"THC al giorno\",\n        usd: dailyUSD,\n      },\n      {\n        value: guadagnoPotenziale,\n        name: \"Guadagno\",\n        usd: guadagnoUSD,\n      },\n      {\n        value: profittoPotenziale,\n        name: \"Profitto\",\n        usd: profittoUSD,\n      },\n    ]);\n  }\n\n  return (\n    <div>\n      <div className=\"mainLayout flexSpace marginTop10 maxWidth350 column\">\n        <h3>Percentuale Vittorie</h3>\n        <div style={{ display: \"flex\" }} className=\"flexSpace\">\n          <button\n            style={{ backgroundColor: colore1 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar(25)}\n          >\n            25%\n          </button>\n          <button\n            style={{ backgroundColor: colore2 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar(50)}\n          >\n            50%\n          </button>\n          <button\n            style={{ backgroundColor: colore3 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar(75)}\n          >\n            75%\n          </button>\n          <button\n            style={{ backgroundColor: colore4 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar()}\n          >\n            100%\n          </button>\n        </div>\n      </div>\n      {heroInfo ? (\n        heroInfo.map((data, index) => {\n          //console.log(data);\n          return (\n            <div\n              key={index}\n              className=\"mainLayout flexSpace marginTop10 maxWidth350\"\n            >\n              <div>\n                <h3>{data.name}</h3>\n              </div>\n              <div className=\"resultLabel\">\n                <div className=\"guadagnoLabel\">\n                  <h3 id=\"profittoPotenziale\">{data.value} THC</h3>\n                  <div className=\"usd\" id=\"profittoPotenzialeUSD\">\n                    {data.usd} USD\n                  </div>\n                </div>\n                <div\n                  style={{ backgroundImage: \"url(\" + props.coin + \")\" }}\n                  className=\"thc\"\n                ></div>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>\"NIENTE\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default Guadagni;\n"]},"metadata":{},"sourceType":"module"}