{"ast":null,"code":"var _jsxFileName = \"/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/InfoPersonaggio.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoPersonaggio(props) {\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n  let info = [];\n\n  if (hero) {\n    // se il personaggio è in vendita\n    if (hero.sale) {\n      if (hero.rentInfo) {\n        // se il personaggio è in affitto\n        info = [{\n          value: hero.rentInfo.cost.value / 100000000,\n          name: \"Costo\",\n          usd: (hero.rentInfo.cost.value / 100000000 * props.prezzoTHC).toFixed(2)\n        }, {\n          value: hero.heroRanking.totalBattleCapTHC,\n          name: \"Battagle Totali\"\n        }, {\n          value: hero.heroRanking.battleCapTHC,\n          name: \"Battaglie Bruciate\"\n        }, {\n          value: hero.dailyTHCBattleConfig,\n          name: \"Daily Battles\"\n        }, {\n          value: hero.thcBonus,\n          name: \"Bonus THC\",\n          usd: (hero.thcBonus * props.prezzoTHC).toFixed(2)\n        }];\n      } else {\n        // Se il personaggio è in vendita\n        info = [{\n          value: hero.sale.price.value / 100000000,\n          name: \"Costo\",\n          usd: (hero.sale.price.value / 100000000 * props.prezzoTHC).toFixed(2)\n        }, {\n          value: hero.heroRanking.totalBattleCapTHC,\n          name: \"Battagle Totali\"\n        }, {\n          value: hero.heroRanking.battleCapTHC,\n          name: \"Battaglie Bruciate\"\n        }, {\n          value: hero.dailyTHCBattleConfig,\n          name: \"Daily Battles\"\n        }, {\n          value: hero.thcBonus,\n          name: \"Bonus THC\",\n          usd: (hero.thcBonus * props.prezzoTHC).toFixed(2)\n        }];\n      }\n    } else {\n      // se il personaggio è stato comprato\n      if (hero.lastPrice) {\n        info = [{\n          value: hero.lastPrice / 100000000,\n          name: \"Costo\",\n          usd: (hero.lastPrice / 100000000 * props.prezzoTHC).toFixed(2)\n        }, {\n          value: hero.heroRanking.totalBattleCapTHC,\n          name: \"Battagle Totali\"\n        }, {\n          value: hero.heroRanking.battleCapTHC,\n          name: \"Battaglie Bruciate\"\n        }, {\n          value: hero.dailyTHCBattleConfig,\n          name: \"Daily Battles\"\n        }, {\n          value: hero.thcBonus,\n          name: \"Bonus THC\",\n          usd: (hero.thcBonus * props.prezzoTHC).toFixed(2)\n        }];\n      } else {\n        // SE IL PERSONAGGIO è STATO TROVATO IN UNA BOX\n        let rarity = 1000;\n\n        switch (hero.heroInfo.rarity) {\n          case 0:\n            rarity = 1000;\n            break;\n\n          case 1:\n            rarity = 2200;\n            break;\n\n          default:\n            rarity = 0;\n        }\n\n        info = [{\n          value: rarity,\n          name: \"Costo\",\n          usd: (rarity * props.prezzoTHC).toFixed(2)\n        }, {\n          value: hero.heroRanking.totalBattleCapTHC,\n          name: \"Battagle Totali\"\n        }, {\n          value: hero.heroRanking.battleCapTHC,\n          name: \"Battaglie Bruciate\"\n        }, {\n          value: hero.dailyTHCBattleConfig,\n          name: \"Daily Battles\"\n        }, {\n          value: hero.thcBonus,\n          name: \"Bonus THC\",\n          usd: (hero.thcBonus * props.prezzoTHC).toFixed(2)\n        }];\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hero ? info.map((data, index) => {\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainLayout flexSpace marginTop10 maxWidth350\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guadagnoLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"profittoPotenziale\",\n              children: [data.value, \" \", data.usd && \" THC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), data.usd && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"usd\",\n              id: \"profittoPotenzialeUSD\",\n              children: [data.usd, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), data.usd && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + props.coin + \")\"\n            },\n            className: \"thc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"NIENTE\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoPersonaggio;\nexport default InfoPersonaggio;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoPersonaggio\");","map":{"version":3,"sources":["/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/InfoPersonaggio.js"],"names":["InfoPersonaggio","props","console","log","dataHero","hero","info","sale","rentInfo","value","cost","name","usd","prezzoTHC","toFixed","heroRanking","totalBattleCapTHC","battleCapTHC","dailyTHCBattleConfig","thcBonus","price","lastPrice","rarity","heroInfo","map","data","index","backgroundImage","coin"],"mappings":"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","sourcesContent":["function InfoPersonaggio(props) {\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n\n  let info = [];\n  if (hero) {\n    // se il personaggio è in vendita\n    if (hero.sale) {\n        if(hero.rentInfo) {\n            // se il personaggio è in affitto\n            info = [\n                {\n                  value: hero.rentInfo.cost.value / 100000000,\n                  name: \"Costo\",\n                  usd: ((hero.rentInfo.cost.value / 100000000) * props.prezzoTHC).toFixed(\n                    2\n                  ),\n                },\n                {\n                  value: hero.heroRanking.totalBattleCapTHC,\n                  name: \"Battagle Totali\",\n                },\n                {\n                  value: hero.heroRanking.battleCapTHC,\n                  name: \"Battaglie Bruciate\",\n                },\n                {\n                  value: hero.dailyTHCBattleConfig,\n                  name: \"Daily Battles\",\n                },\n                {\n                  value: hero.thcBonus,\n                  name: \"Bonus THC\",\n                  usd: (hero.thcBonus * props.prezzoTHC).toFixed(2),\n                },\n              ];\n        } else {\n            // Se il personaggio è in vendita\n            info = [\n                {\n                  value: hero.sale.price.value / 100000000,\n                  name: \"Costo\",\n                  usd: ((hero.sale.price.value / 100000000) * props.prezzoTHC).toFixed(\n                    2\n                  ),\n                },\n                {\n                  value: hero.heroRanking.totalBattleCapTHC,\n                  name: \"Battagle Totali\",\n                },\n                {\n                  value: hero.heroRanking.battleCapTHC,\n                  name: \"Battaglie Bruciate\",\n                },\n                {\n                  value: hero.dailyTHCBattleConfig,\n                  name: \"Daily Battles\",\n                },\n                {\n                  value: hero.thcBonus,\n                  name: \"Bonus THC\",\n                  usd: (hero.thcBonus * props.prezzoTHC).toFixed(2),\n                },\n              ];\n        }\n      \n    } else {\n      // se il personaggio è stato comprato\n      if (hero.lastPrice) {\n        info = [\n          {\n            value: hero.lastPrice / 100000000,\n            name: \"Costo\",\n            usd: (\n              (hero.lastPrice / 100000000) *\n              props.prezzoTHC\n            ).toFixed(2),\n          },\n          {\n            value: hero.heroRanking.totalBattleCapTHC,\n            name: \"Battagle Totali\",\n          },\n          {\n            value: hero.heroRanking.battleCapTHC,\n            name: \"Battaglie Bruciate\",\n          },\n          {\n            value: hero.dailyTHCBattleConfig,\n            name: \"Daily Battles\",\n          },\n          {\n            value: hero.thcBonus,\n            name: \"Bonus THC\",\n            usd: (hero.thcBonus * props.prezzoTHC).toFixed(2),\n          },\n        ];\n      } else {\n        // SE IL PERSONAGGIO è STATO TROVATO IN UNA BOX\n        let rarity = 1000;\n        switch (hero.heroInfo.rarity) {\n          case 0:\n            rarity = 1000;\n            break;\n          case 1:\n            rarity = 2200;\n            break;\n          default:\n            rarity = 0;\n        }\n        info = [\n          {\n            value: rarity,\n            name: \"Costo\",\n            usd: (rarity * props.prezzoTHC).toFixed(2),\n          },\n          {\n            value: hero.heroRanking.totalBattleCapTHC,\n            name: \"Battagle Totali\",\n          },\n          {\n            value: hero.heroRanking.battleCapTHC,\n            name: \"Battaglie Bruciate\",\n          },\n          {\n            value: hero.dailyTHCBattleConfig,\n            name: \"Daily Battles\",\n          },\n          {\n            value: hero.thcBonus,\n            name: \"Bonus THC\",\n            usd: (hero.thcBonus * props.prezzoTHC).toFixed(2),\n          },\n        ];\n      }\n    }\n  }\n  return (\n    <div>\n      {hero ? (\n        info.map((data, index) => {\n          console.log(data);\n          return (\n            <div\n              key={index}\n              className=\"mainLayout flexSpace marginTop10 maxWidth350\"\n            >\n              <div>\n                <h3>{data.name}</h3>\n              </div>\n              <div className=\"resultLabel\">\n                <div className=\"guadagnoLabel\">\n                  <h3 id=\"profittoPotenziale\">\n                    {data.value} {data.usd && \" THC\"}\n                  </h3>\n                  {data.usd && (\n                    <div className=\"usd\" id=\"profittoPotenzialeUSD\">\n                      {data.usd} USD\n                    </div>\n                  )}\n                </div>\n                {data.usd && (\n                  <div\n                    style={{ backgroundImage: \"url(\" + props.coin + \")\" }}\n                    className=\"thc\"\n                  ></div>\n                )}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>\"NIENTE\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default InfoPersonaggio;\n"]},"metadata":{},"sourceType":"module"}