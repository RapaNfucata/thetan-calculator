{"ast":null,"code":"var _jsxFileName = \"/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Guadagni(props) {\n  _s();\n\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n  let colore1, colore2, colore3, colore4;\n  const activeColor = \"#fbba16\";\n  const standardColor = \"white\";\n  colore1 = standardColor;\n  colore2 = standardColor;\n  colore3 = standardColor;\n  colore4 = activeColor;\n  const [heroInfo, setHeroInfo] = useState([]);\n  useEffect(() => {\n    percentageVar();\n  }, []);\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        colore1 = activeColor;\n        colore2 = standardColor;\n        colore3 = standardColor;\n        colore4 = standardColor;\n        setHero();\n        break;\n\n      case 50:\n        percentage = 0.5;\n        colore1 = standardColor;\n        colore2 = activeColor;\n        colore3 = standardColor;\n        colore4 = standardColor;\n        setHero();\n        break;\n\n      case 75:\n        percentage = 0.75;\n        colore1 = standardColor;\n        colore2 = standardColor;\n        colore3 = activeColor;\n        colore4 = standardColor;\n        setHero();\n        break;\n\n      default:\n        percentage = 1;\n        colore1 = standardColor;\n        colore2 = standardColor;\n        colore3 = standardColor;\n        colore4 = activeColor;\n        setHero();\n    }\n  }\n\n  function setHero() {\n    const battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n    const guadagnoPotenziale = (hero.thcBonus + 6) * battaglieRimanenti * percentage;\n    const profittoPotenziale = (guadagnoPotenziale - hero.sale.price.value / 100000000) * percentage;\n    const daily = (hero.thcBonus + 6) * hero.dailyTHCBattleConfig * percentage;\n    const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n    const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n    const dailyUSD = (daily * props.prezzoTHC).toFixed(2);\n    setHeroInfo([{\n      value: daily,\n      name: \"THC al giorno\",\n      usd: dailyUSD\n    }, {\n      value: guadagnoPotenziale,\n      name: \"Guadagno\",\n      usd: guadagnoUSD\n    }, {\n      value: profittoPotenziale,\n      name: \"Profitto\",\n      usd: profittoUSD\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainLayout flexSpace marginTop10 maxWidth350 column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Percentuale Vittorie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        className: \"flexSpace\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore1\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(25),\n          children: \"25%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore2\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(50),\n          children: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore3\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(75),\n          children: \"75%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: colore4\n          },\n          className: \"buttonOne \",\n          onClick: () => percentageVar(),\n          children: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), heroInfo ? heroInfo.map(data => {\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainLayout flexSpace marginTop10 maxWidth350\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guadagnoLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"profittoPotenziale\",\n              children: [data.value, \" THC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"usd\",\n              id: \"profittoPotenzialeUSD\",\n              children: [data.usd, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + props.coin + \")\"\n            },\n            class: \"thc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"NIENTE\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guadagni, \"4cI2qGIOGGPzD2CIblPBmq6nLxM=\");\n\n_c = Guadagni;\nexport default Guadagni;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guadagni\");","map":{"version":3,"sources":["/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js"],"names":["useEffect","useState","Guadagni","props","console","log","dataHero","hero","percentage","colore1","colore2","colore3","colore4","activeColor","standardColor","heroInfo","setHeroInfo","percentageVar","perc","setHero","battaglieRimanenti","heroRanking","totalBattleCapTHC","battleCapTHC","guadagnoPotenziale","thcBonus","profittoPotenziale","sale","price","value","daily","dailyTHCBattleConfig","guadagnoUSD","prezzoTHC","toFixed","profittoUSD","dailyUSD","name","usd","display","backgroundColor","map","data","backgroundImage","coin"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Guadagni(props) {\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n\n  let colore1, colore2, colore3, colore4;\n  const activeColor = \"#fbba16\";\n  const standardColor = \"white\"\n  colore1 = standardColor\n  colore2 = standardColor\n  colore3 = standardColor\n  colore4 = activeColor\n  \n\n  const [heroInfo, setHeroInfo] = useState([]);\n\n  useEffect(() => {\n    percentageVar()\n  }, [])\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        colore1 = activeColor\n        colore2 = standardColor\n        colore3 = standardColor\n        colore4 = standardColor\n        setHero();\n        break;\n      case 50:\n        percentage = 0.5;\n        colore1 = standardColor\n        colore2 = activeColor\n        colore3 = standardColor\n        colore4 = standardColor\n        setHero();\n        break;\n      case 75:\n        percentage = 0.75;\n        colore1 = standardColor\n        colore2 = standardColor\n        colore3 = activeColor\n        colore4 = standardColor\n        setHero();\n        break;\n      default:\n        percentage = 1;\n        colore1 = standardColor\n        colore2 = standardColor\n        colore3 = standardColor\n        colore4 = activeColor\n        setHero();\n    }\n  }\n\n  function setHero() {\n    const battaglieRimanenti =\n      hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n\n    const guadagnoPotenziale =\n      (hero.thcBonus + 6) * battaglieRimanenti * percentage;\n    const profittoPotenziale =\n      (guadagnoPotenziale - hero.sale.price.value / 100000000) * percentage;\n    const daily = (hero.thcBonus + 6) * hero.dailyTHCBattleConfig * percentage;\n\n    const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n    const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n    const dailyUSD = (daily * props.prezzoTHC).toFixed(2);\n    setHeroInfo([\n      {\n        value: daily,\n        name: \"THC al giorno\",\n        usd: dailyUSD,\n      },\n      {\n        value: guadagnoPotenziale,\n        name: \"Guadagno\",\n        usd: guadagnoUSD,\n      },\n      {\n        value: profittoPotenziale,\n        name: \"Profitto\",\n        usd: profittoUSD,\n      },\n    ]);\n  }\n\n  return (\n    <div>\n      <div className=\"mainLayout flexSpace marginTop10 maxWidth350 column\">\n        <h3>Percentuale Vittorie</h3>\n        <div style={{display: \"flex\"}} className=\"flexSpace\">\n          <button style={{backgroundColor: colore1}} className=\"buttonOne \" onClick={() => percentageVar(25)}>25%</button>\n          <button style={{backgroundColor: colore2}} className=\"buttonOne \" onClick={() => percentageVar(50)}>50%</button>\n          <button style={{backgroundColor: colore3}} className=\"buttonOne \" onClick={() => percentageVar(75)}>75%</button>\n          <button style={{backgroundColor: colore4}} className=\"buttonOne \" onClick={() => percentageVar()}>100%</button>\n        </div>\n      </div>\n      {heroInfo ? (\n        heroInfo.map((data) => {\n          console.log(data);\n          return (\n            <div className=\"mainLayout flexSpace marginTop10 maxWidth350\">\n              <div>\n                <h3>{data.name}</h3>\n              </div>\n              <div className=\"resultLabel\">\n                <div className=\"guadagnoLabel\">\n                  <h3 id=\"profittoPotenziale\">{data.value} THC</h3>\n                  <div className=\"usd\" id=\"profittoPotenzialeUSD\">\n                    {data.usd} USD\n                  </div>\n                </div>\n                <div\n                  style={{ backgroundImage: \"url(\" + props.coin + \")\" }}\n                  class=\"thc\"\n                ></div>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>\"NIENTE\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default Guadagni;\n"]},"metadata":{},"sourceType":"module"}