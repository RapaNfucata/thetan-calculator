{"ast":null,"code":"var _jsxFileName = \"/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Guadagni(props) {\n  _s();\n\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n  const [heroInfo, setHeroInfo] = useState([]);\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        break;\n\n      case 50:\n        percentage = 0.5;\n        break;\n\n      case 75:\n        percentage = 0.75;\n        break;\n\n      default:\n        percentage = 1;\n    }\n  }\n\n  const battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n  const guadagnoPotenziale = (hero.thcBonus + 6) * battaglieRimanenti * percentage;\n  const profittoPotenziale = (guadagnoPotenziale - hero.sale.price.value / 100000000) * percentage;\n  const daily = (hero.thcBonus + 6) * hero.dailyTHCBattleConfig * percentage;\n  const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n  const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n  const dailyUSD = ((hero.thcBonus + 6) * hero.dailyTHCBattleConfig * props.prezzoTHC).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mainLayout flexSpace marginTop10 maxWidth350\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => percentageVar(25),\n        children: \"25%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => percentageVar(50),\n        children: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => percentageVar(75),\n        children: \"75%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => percentageVar(),\n        children: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), heroInfo.length != 0 ? heroInfo.map(data => {\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mainLayout flexSpace marginTop10 maxWidth350\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"resultLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"guadagnoLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"profittoPotenziale\",\n              children: [data.value, \" THC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"usd\",\n              id: \"profittoPotenzialeUSD\",\n              children: [data.usd, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + props.coin + \")\"\n            },\n            class: \"thc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"NIENTE\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guadagni, \"RBffhPdJ6U9kDlJBXgoFCDRSSfE=\");\n\n_c = Guadagni;\nexport default Guadagni;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guadagni\");","map":{"version":3,"sources":["/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js"],"names":["useState","Guadagni","props","console","log","dataHero","hero","percentage","heroInfo","setHeroInfo","percentageVar","perc","battaglieRimanenti","heroRanking","totalBattleCapTHC","battleCapTHC","guadagnoPotenziale","thcBonus","profittoPotenziale","sale","price","value","daily","dailyTHCBattleConfig","guadagnoUSD","prezzoTHC","toFixed","profittoUSD","dailyUSD","length","map","data","name","usd","backgroundImage","coin"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nfunction Guadagni(props) {\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n\n  const [heroInfo, setHeroInfo] = useState([]);\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        break;\n      case 50:\n        percentage = 0.5;\n        break;\n      case 75:\n        percentage = 0.75;\n        break;\n      default:\n        percentage = 1;\n    }\n  }\n\n  const battaglieRimanenti =\n    hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n\n  const guadagnoPotenziale =\n    (hero.thcBonus + 6) * battaglieRimanenti * percentage;\n  const profittoPotenziale =\n    (guadagnoPotenziale - hero.sale.price.value / 100000000) * percentage;\n  const daily = (hero.thcBonus + 6) * hero.dailyTHCBattleConfig * percentage;\n\n  const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n  const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n  const dailyUSD = (\n    (hero.thcBonus + 6) *\n    hero.dailyTHCBattleConfig *\n    props.prezzoTHC\n  ).toFixed(2);\n\n  return (\n    <div>\n      <div class=\"mainLayout flexSpace marginTop10 maxWidth350\">\n        <button onClick={() => percentageVar(25)}>25%</button>\n        <button onClick={() => percentageVar(50)}>50%</button>\n        <button onClick={() => percentageVar(75)}>75%</button>\n        <button onClick={() => percentageVar()}>100%</button>\n      </div>\n      {heroInfo.length != 0 ? (\n        heroInfo.map((data) => {\n          console.log(data);\n          return (\n            <div class=\"mainLayout flexSpace marginTop10 maxWidth350\">\n              <div>\n                <h3>{data.name}</h3>\n              </div>\n              <div class=\"resultLabel\">\n                <div class=\"guadagnoLabel\">\n                  <h3 id=\"profittoPotenziale\">{data.value} THC</h3>\n                  <div class=\"usd\" id=\"profittoPotenzialeUSD\">\n                    {data.usd} USD\n                  </div>\n                </div>\n                <div\n                  style={{ backgroundImage: \"url(\" + props.coin + \")\" }}\n                  class=\"thc\"\n                ></div>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>\"NIENTE\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default Guadagni;\n"]},"metadata":{},"sourceType":"module"}