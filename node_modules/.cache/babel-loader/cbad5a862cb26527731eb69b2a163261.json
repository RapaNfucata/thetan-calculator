{"ast":null,"code":"import _slicedToArray from\"/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Guadagni(props){//console.log(props.dataHero);\nvar hero=props.dataHero;var percentage=1;var _useState=useState(),_useState2=_slicedToArray(_useState,2),colore1=_useState2[0],setColore1=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),colore2=_useState4[0],setColore2=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),colore3=_useState6[0],setColore3=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),colore4=_useState8[0],setColore4=_useState8[1];var activeColor=\"#2290FF\";var standardColor=\"#fbba16\";function roundNumber(num){var rndnum=Math.round((num+Number.EPSILON)*100)/100;return rndnum;}var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),heroInfo=_useState10[0],setHeroInfo=_useState10[1];function percentageVar(perc){switch(perc){case 25:percentage=0.25;setColore1(activeColor);setColore2(standardColor);setColore3(standardColor);setColore4(standardColor);setHero();break;case 50:percentage=0.5;setColore1(standardColor);setColore2(activeColor);setColore3(standardColor);setColore4(standardColor);setHero();break;case 75:percentage=0.75;setColore1(standardColor);setColore2(standardColor);setColore3(activeColor);setColore4(standardColor);setHero();break;default:percentage=1;setColore1(standardColor);setColore2(standardColor);setColore3(standardColor);setColore4(activeColor);setHero();}}useEffect(function(){percentageVar();});function setHero(){var battaglieRimanenti=0;var prezzoHero=0;if(hero.sale){// se il personaggio è in vendita\nif(hero.rentInfo){// se il personaggio è in affitto\nprezzoHero=hero.rentInfo.cost.value/100000000;battaglieRimanenti=hero.rentInfo.rentBattles;}else{if(hero.lastPrice){// se il personaggio è stato aquistato\nprezzoHero=hero.lastPrice.value/100000000;battaglieRimanenti=hero.heroRanking.totalBattleCapTHC-hero.heroRanking.battleCapTHC;console.log(\"COMPRATO \"+hero.lastPrice.value);}else{prezzoHero=hero.sale.price.value/100000000;battaglieRimanenti=hero.heroRanking.totalBattleCapTHC-hero.heroRanking.battleCapTHC;}}}else{if(hero.lastPrice){// se il personaggio è stato aquistato\nprezzoHero=hero.lastPrice.value/100000000;battaglieRimanenti=hero.heroRanking.totalBattleCapTHC-hero.heroRanking.battleCapTHC;}else{// se l'hai trovato in una box\n/*         fetch(\"https://data.thetanarena.com/thetan/v1/thetanbox/dashboard\")\n          .then((response) => response.json())\n          .then((data) => console.log(data.data)); */switch(hero.heroInfo.rarity){case 0:prezzoHero=1000;break;case 1:prezzoHero=2200;break;default:prezzoHero=0;}battaglieRimanenti=hero.heroRanking.totalBattleCapTHC-hero.heroRanking.battleCapTHC;}}var battaglieRimanentiCalcolo=battaglieRimanenti*percentage;var battagliePerse=battaglieRimanenti-battaglieRimanentiCalcolo;console.log(battagliePerse);var guadagnoPotenziale=roundNumber((hero.thcBonus+6)*battaglieRimanentiCalcolo+battagliePerse);var profittoPotenziale=roundNumber((guadagnoPotenziale-prezzoHero)*percentage);var daily=roundNumber((hero.thcBonus+6)*(hero.dailyTHCBattleConfig*percentage));var guadagnoUSD=(guadagnoPotenziale*props.prezzoTHC).toFixed(2);var profittoUSD=(profittoPotenziale*props.prezzoTHC).toFixed(2);var dailyUSD=(daily*props.prezzoTHC).toFixed(2);setHeroInfo([{value:daily,name:\"THC al giorno\",usd:dailyUSD},{value:guadagnoPotenziale,name:\"Guadagno\",usd:guadagnoUSD},{value:profittoPotenziale,name:\"Profitto\",usd:profittoUSD}]);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mainLayout flexSpace marginTop10 maxWidth350 column\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Percentuale Vittorie\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},className:\"flexSpace\",children:[/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:colore1},className:\"buttonOne \",onClick:function onClick(){return percentageVar(25);},children:\"25%\"}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:colore2},className:\"buttonOne \",onClick:function onClick(){return percentageVar(50);},children:\"50%\"}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:colore3},className:\"buttonOne \",onClick:function onClick(){return percentageVar(75);},children:\"75%\"}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:colore4},className:\"buttonOne \",onClick:function onClick(){return percentageVar();},children:\"100%\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:heroInfo?heroInfo.map(function(data,index){//console.log(data);\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"mainLayout flexSpace marginTop10 maxWidth350\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{children:data.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"resultLabel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"guadagnoLabel\",children:[/*#__PURE__*/_jsxs(\"h3\",{id:\"profittoPotenziale\",children:[data.value,\" THC\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"usd\",id:\"profittoPotenzialeUSD\",children:[data.usd,\" USD\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:\"url(\"+props.coin+\")\"},className:\"thc\"})]})]},index);}):/*#__PURE__*/_jsx(\"div\",{children:\"\\\"NIENTE\\\"\"})})]});}export default Guadagni;","map":{"version":3,"sources":["/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js"],"names":["useEffect","useState","Guadagni","props","hero","dataHero","percentage","colore1","setColore1","colore2","setColore2","colore3","setColore3","colore4","setColore4","activeColor","standardColor","roundNumber","num","rndnum","Math","round","Number","EPSILON","heroInfo","setHeroInfo","percentageVar","perc","setHero","battaglieRimanenti","prezzoHero","sale","rentInfo","cost","value","rentBattles","lastPrice","heroRanking","totalBattleCapTHC","battleCapTHC","console","log","price","rarity","battaglieRimanentiCalcolo","battagliePerse","guadagnoPotenziale","thcBonus","profittoPotenziale","daily","dailyTHCBattleConfig","guadagnoUSD","prezzoTHC","toFixed","profittoUSD","dailyUSD","name","usd","display","backgroundColor","map","data","index","backgroundImage","coin"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Guadagni(props) {\n  //console.log(props.dataHero);\n  const hero = props.dataHero;\n  let percentage = 1;\n\n  const [colore1, setColore1] = useState();\n  const [colore2, setColore2] = useState();\n  const [colore3, setColore3] = useState();\n  const [colore4, setColore4] = useState();\n  const activeColor = \"#2290FF\";\n  const standardColor = \"#fbba16\";\n\n  function roundNumber(num) {\n    const rndnum = Math.round((num + Number.EPSILON) * 100) / 100;\n    return rndnum;\n  }\n\n  const [heroInfo, setHeroInfo] = useState([]);\n\n  function percentageVar(perc) {\n    switch (perc) {\n      case 25:\n        percentage = 0.25;\n        setColore1(activeColor);\n        setColore2(standardColor);\n        setColore3(standardColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n      case 50:\n        percentage = 0.5;\n        setColore1(standardColor);\n        setColore2(activeColor);\n        setColore3(standardColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n      case 75:\n        percentage = 0.75;\n        setColore1(standardColor);\n        setColore2(standardColor);\n        setColore3(activeColor);\n        setColore4(standardColor);\n        setHero();\n        break;\n      default:\n        percentage = 1;\n        setColore1(standardColor);\n        setColore2(standardColor);\n        setColore3(standardColor);\n        setColore4(activeColor);\n        setHero();\n    }\n  }\n\n  useEffect(() => {\n    percentageVar();\n  });\n\n  function setHero() {\n    let battaglieRimanenti = 0;\n    let prezzoHero = 0;\n\n    if (hero.sale) {\n      // se il personaggio è in vendita\n      if (hero.rentInfo) {\n        // se il personaggio è in affitto\n        prezzoHero = hero.rentInfo.cost.value / 100000000;\n        battaglieRimanenti = hero.rentInfo.rentBattles;\n      } else {\n        if (hero.lastPrice) {\n          // se il personaggio è stato aquistato\n          prezzoHero = hero.lastPrice.value / 100000000;\n          battaglieRimanenti =\n            hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n          console.log(\"COMPRATO \" + hero.lastPrice.value);\n        } else {\n          prezzoHero = hero.sale.price.value / 100000000;\n          battaglieRimanenti =\n            hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n        }\n      }\n    } else {\n      if (hero.lastPrice) {\n        // se il personaggio è stato aquistato\n        prezzoHero = hero.lastPrice.value / 100000000;\n        battaglieRimanenti =\n          hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n      } else {\n        // se l'hai trovato in una box\n        /*         fetch(\"https://data.thetanarena.com/thetan/v1/thetanbox/dashboard\")\n          .then((response) => response.json())\n          .then((data) => console.log(data.data)); */\n        switch (hero.heroInfo.rarity) {\n          case 0:\n            prezzoHero = 1000;\n            break;\n          case 1:\n            prezzoHero = 2200;\n            break;\n          default:\n            prezzoHero = 0;\n        }\n        battaglieRimanenti =\n          hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n      }\n    }\n\n    const battaglieRimanentiCalcolo = battaglieRimanenti * percentage;\n    const battagliePerse = battaglieRimanenti - battaglieRimanentiCalcolo;\n\n    console.log(battagliePerse);\n    const guadagnoPotenziale = roundNumber(\n      (hero.thcBonus + 6) * battaglieRimanentiCalcolo + battagliePerse\n    );\n    const profittoPotenziale = roundNumber(\n      (guadagnoPotenziale - prezzoHero) * percentage\n    );\n    const daily = roundNumber(\n      (hero.thcBonus + 6) * (hero.dailyTHCBattleConfig * percentage)\n    );\n\n    const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n    const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n    const dailyUSD = (daily * props.prezzoTHC).toFixed(2);\n\n    setHeroInfo([\n      {\n        value: daily,\n        name: \"THC al giorno\",\n        usd: dailyUSD,\n      },\n      {\n        value: guadagnoPotenziale,\n        name: \"Guadagno\",\n        usd: guadagnoUSD,\n      },\n      {\n        value: profittoPotenziale,\n        name: \"Profitto\",\n        usd: profittoUSD,\n      },\n    ]);\n  }\n\n  return (\n    <div>\n      <div className=\"mainLayout flexSpace marginTop10 maxWidth350 column\">\n        <h3>Percentuale Vittorie</h3>\n        <div style={{ display: \"flex\" }} className=\"flexSpace\">\n          <button\n            style={{ backgroundColor: colore1 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar(25)}\n          >\n            25%\n          </button>\n          <button\n            style={{ backgroundColor: colore2 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar(50)}\n          >\n            50%\n          </button>\n          <button\n            style={{ backgroundColor: colore3 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar(75)}\n          >\n            75%\n          </button>\n          <button\n            style={{ backgroundColor: colore4 }}\n            className=\"buttonOne \"\n            onClick={() => percentageVar()}\n          >\n            100%\n          </button>\n        </div>\n      </div>\n      <div>\n        {heroInfo ? (\n          heroInfo.map((data, index) => {\n            //console.log(data);\n            return (\n              <div\n                key={index}\n                className=\"mainLayout flexSpace marginTop10 maxWidth350\"\n              >\n                <div>\n                  <h3>{data.name}</h3>\n                </div>\n                <div className=\"resultLabel\">\n                  <div className=\"guadagnoLabel\">\n                    <h3 id=\"profittoPotenziale\">{data.value} THC</h3>\n                    <div className=\"usd\" id=\"profittoPotenzialeUSD\">\n                      {data.usd} USD\n                    </div>\n                  </div>\n                  <div\n                    style={{ backgroundImage: \"url(\" + props.coin + \")\" }}\n                    className=\"thc\"\n                  ></div>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div>\"NIENTE\"</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Guadagni;\n"]},"metadata":{},"sourceType":"module"}