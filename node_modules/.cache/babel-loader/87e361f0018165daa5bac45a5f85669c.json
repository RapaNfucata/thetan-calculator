{"ast":null,"code":"var _jsxFileName = \"/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Guadagni(props) {\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n  const battaglieRimanenti = hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n  const guadagnoPotenziale = (hero.thcBonus + 6) * battaglieRimanenti;\n  const profittoPotenziale = guadagnoPotenziale - hero.sale.price.value / 100000000;\n  const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n  const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n  let info = [];\n\n  if (hero) {\n    info = [{\n      value: (hero.thcBonus + 6) * hero.dailyTHCBattleConfig,\n      name: \"THC al giorno\",\n      usd: ((hero.thcBonus + 6) * hero.dailyTHCBattleConfig * props.prezzoTHC).toFixed(2)\n    }, {\n      value: guadagnoPotenziale,\n      name: \"Guadagno Potenziale\",\n      usd: guadagnoUSD\n    }, {\n      value: profittoPotenziale,\n      name: \"Profitto Potenziale\",\n      usd: profittoUSD\n    }];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hero ? info.map(data => {\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mainLayout flexSpace marginTop10 maxWidth350\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"resultLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"guadagnoLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"profittoPotenziale\",\n              children: [data.value, \" THC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"usd\",\n              id: \"profittoPotenzialeUSD\",\n              children: [data.usd, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + props.coin + \")\"\n            },\n            class: \"thc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"NIENTE\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Guadagni;\nexport default Guadagni;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guadagni\");","map":{"version":3,"sources":["/Users/frankscippo/Desktop/GAME/THETAN ARENA/Thetan Calculator React/thetancalculator/src/App/components/Calcolatore/Guadagni.js"],"names":["Guadagni","props","console","log","dataHero","hero","battaglieRimanenti","heroRanking","totalBattleCapTHC","battleCapTHC","guadagnoPotenziale","thcBonus","profittoPotenziale","sale","price","value","guadagnoUSD","prezzoTHC","toFixed","profittoUSD","info","dailyTHCBattleConfig","name","usd","map","data","backgroundImage","coin"],"mappings":";;;AAAA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,QAAMC,IAAI,GAAGJ,KAAK,CAACG,QAAnB;AAEA,QAAME,kBAAkB,GACtBD,IAAI,CAACE,WAAL,CAAiBC,iBAAjB,GAAqCH,IAAI,CAACE,WAAL,CAAiBE,YADxD;AAGA,QAAMC,kBAAkB,GAAG,CAACL,IAAI,CAACM,QAAL,GAAgB,CAAjB,IAAsBL,kBAAjD;AACA,QAAMM,kBAAkB,GACtBF,kBAAkB,GAAGL,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBC,KAAhB,GAAwB,SAD/C;AAGA,QAAMC,WAAW,GAAG,CAACN,kBAAkB,GAAGT,KAAK,CAACgB,SAA5B,EAAuCC,OAAvC,CAA+C,CAA/C,CAApB;AACA,QAAMC,WAAW,GAAG,CAACP,kBAAkB,GAAGX,KAAK,CAACgB,SAA5B,EAAuCC,OAAvC,CAA+C,CAA/C,CAApB;AAEA,MAAIE,IAAI,GAAG,EAAX;;AACA,MAAIf,IAAJ,EAAU;AACRe,IAAAA,IAAI,GAAG,CACL;AACEL,MAAAA,KAAK,EAAE,CAACV,IAAI,CAACM,QAAL,GAAgB,CAAjB,IAAsBN,IAAI,CAACgB,oBADpC;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,GAAG,EAAE,CACH,CAAClB,IAAI,CAACM,QAAL,GAAgB,CAAjB,IACAN,IAAI,CAACgB,oBADL,GAEApB,KAAK,CAACgB,SAHH,EAIHC,OAJG,CAIK,CAJL;AAHP,KADK,EAUL;AACEH,MAAAA,KAAK,EAAEL,kBADT;AAEEY,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,GAAG,EAAEP;AAHP,KAVK,EAeL;AACED,MAAAA,KAAK,EAAEH,kBADT;AAEEU,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,GAAG,EAAEJ;AAHP,KAfK,CAAP;AAqBD;;AACD,sBACE;AAAA,cACGd,IAAI,GACHe,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;AACjBvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,IAAZ;AACA,0BACE;AAAK,QAAA,KAAK,EAAC,8CAAX;AAAA,gCACE;AAAA,iCACE;AAAA,sBAAKA,IAAI,CAACH;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA,kCACE;AAAK,YAAA,KAAK,EAAC,eAAX;AAAA,oCACE;AAAI,cAAA,EAAE,EAAC,oBAAP;AAAA,yBAA6BG,IAAI,CAACV,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,KAAK,EAAC,KAAX;AAAiB,cAAA,EAAE,EAAC,uBAApB;AAAA,yBACGU,IAAI,CAACF,GADR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,KAAK,EAAE;AAAEG,cAAAA,eAAe,EAAE,SAASzB,KAAK,CAAC0B,IAAf,GAAsB;AAAzC,aADT;AAEE,YAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD,KArBD,CADG,gBAwBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;KApEQ3B,Q;AAsET,eAAeA,QAAf","sourcesContent":["function Guadagni(props) {\n  console.log(props.dataHero);\n  const hero = props.dataHero;\n\n  const battaglieRimanenti =\n    hero.heroRanking.totalBattleCapTHC - hero.heroRanking.battleCapTHC;\n\n  const guadagnoPotenziale = (hero.thcBonus + 6) * battaglieRimanenti;\n  const profittoPotenziale =\n    guadagnoPotenziale - hero.sale.price.value / 100000000;\n\n  const guadagnoUSD = (guadagnoPotenziale * props.prezzoTHC).toFixed(2);\n  const profittoUSD = (profittoPotenziale * props.prezzoTHC).toFixed(2);\n\n  let info = [];\n  if (hero) {\n    info = [\n      {\n        value: (hero.thcBonus + 6) * hero.dailyTHCBattleConfig,\n        name: \"THC al giorno\",\n        usd: (\n          (hero.thcBonus + 6) *\n          hero.dailyTHCBattleConfig *\n          props.prezzoTHC\n        ).toFixed(2),\n      },\n      {\n        value: guadagnoPotenziale,\n        name: \"Guadagno Potenziale\",\n        usd: guadagnoUSD,\n      },\n      {\n        value: profittoPotenziale,\n        name: \"Profitto Potenziale\",\n        usd: profittoUSD,\n      },\n    ];\n  }\n  return (\n    <div>\n      {hero ? (\n        info.map((data) => {\n          console.log(data);\n          return (\n            <div class=\"mainLayout flexSpace marginTop10 maxWidth350\">\n              <div>\n                <h3>{data.name}</h3>\n              </div>\n              <div class=\"resultLabel\">\n                <div class=\"guadagnoLabel\">\n                  <h3 id=\"profittoPotenziale\">{data.value} THC</h3>\n                  <div class=\"usd\" id=\"profittoPotenzialeUSD\">\n                    {data.usd} USD\n                  </div>\n                </div>\n                <div\n                  style={{ backgroundImage: \"url(\" + props.coin + \")\" }}\n                  class=\"thc\"\n                ></div>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>\"NIENTE\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default Guadagni;\n"]},"metadata":{},"sourceType":"module"}